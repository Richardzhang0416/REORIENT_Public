legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
# scale_fill_npg()+
labs(x="",y="Power demand (MW)")
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
# scale_fill_brewer(palette = "Dark2")
ggsave("power_demand.pdf", width=14,height=5.5,  units="cm")
power_demand = read_xlsx("power_demand.xlsx")
ggplot(data=power_demand, aes(x=cluster, y=value, fill=type)) +
# scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(position="stack",stat="identity") +
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
# scale_fill_npg()+
scale_fill_brewer(palette = "Dark2")+
labs(x="",y="Power demand (MW)")
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
ggsave("power_demand.pdf", width=14,height=5.5,  units="cm")
power_demand = read_xlsx("power_demand.xlsx")
ggplot(data=power_demand, aes(x=cluster, y=value, fill=type)) +
# scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(position="stack",stat="identity") +
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
# scale_fill_npg()+
scale_fill_brewer(palette = "Dark2")+
labs(x="",y="Yearly power demand (GWh)")
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
ggsave("power_demand.pdf", width=14,height=5.5,  units="cm")
power_demand = read_xlsx("power_demand.xlsx")
ggplot(data=power_demand, aes(x=cluster, y=value, fill=type)) +
# scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(position="stack",stat="identity") +
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
# scale_fill_npg()+
scale_fill_brewer(palette = "Dark2")+
labs(x="",y="Power demand (GWh/yr)")
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
ggsave("power_demand.pdf", width=14,height=5.5,  units="cm")
rel_power_demand = read_xlsx("rel_power_demand.xlsx")
ggplot(data=rel_power_demand, aes(x=cluster, y=value, fill=type)) +
scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(stat = "identity", position="dodge") +
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
labs(x="",y="Power demand (%)")
# scale_fill_npg()
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
# scale_fill_brewer(palette = "Dark2")
ggsave("rel_power_demand.pdf", width=14,height=5.5,  units="cm")
power_demand = read_xlsx("power_demand.xlsx")
ggplot(data=power_demand, aes(x=cluster, y=value, fill=type)) +
# scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(position="stack",stat="identity") +
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
# scale_fill_npg()+
# scale_fill_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Pastel1",direction=-4)+
labs(x="",y="Power demand (GWh/yr)")
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
ggsave("power_demand.pdf", width=14,height=5.5,  units="cm")
power_demand = read_xlsx("power_demand.xlsx")
ggplot(data=power_demand, aes(x=cluster, y=value, fill=type)) +
# scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(position="stack",stat="identity") +
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
# scale_fill_npg()+
scale_fill_brewer(palette = "Dark2")+
# scale_fill_brewer(palette = "Pastel1",direction=-4)+
labs(x="",y="Power demand (GWh/yr)")
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
ggsave("power_demand.pdf", width=14,height=5.5,  units="cm")
library(ggrepel)
rel_emission = read_xlsx("rel_emission.xlsx")
rel_emission=data.frame(remission=round(rel_emission$emission/100,digits=3),rel_emission)
df2 <- rel_emission %>%
mutate(
cs = rev(cumsum(rev(remission))),
pos = remission/2 + lead(cs, 1),
pos = if_else(is.na(pos), remission/2, pos))
ggplot(data=rel_emission, aes(x="", y=remission,fill=cluster)) +
# geom_bar(stat = "identity",width=1) +
geom_col(width = 1)+
coord_polar(theta="y",start = 0 )+
# scale_fill_brewer(palette = "Pastel1",direction=-4) +
scale_fill_brewer(palette = "Dark2")+
# geom_text(aes(label = percent(remission)),position = position_stack(vjust = 0.5))+
geom_label_repel(aes(y = pos, label = percent(remission)), data = df2, size=4, show.legend = FALSE, nudge_x = 1) +
# guides(fill = guide_legend(title = "Status"))
theme_void()+
theme(legend.title = element_blank())
# theme(legend.title = element_blank(),
#       legend.box="vertical", legend.margin=margin(),
#         panel.background = element_rect(fill = "white",
#                                 colour = "black",
#                                 size = 0.25),
#         axis.text.x=element_text( hjust=0.5,vjust=0.5),
#         panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
#                                 colour = "grey"), panel.grid.minor=element_blank())+
#   labs(x="",y=" ")+
#   coord_polar("y") +
#   scale_fill_npg()
ggsave("rel_emission_pie.pdf", width=9, height=5.56, units="cm")
library(ggrepel)
rel_emission = read_xlsx("rel_emission.xlsx")
rel_emission=data.frame(remission=round(rel_emission$emission/100,digits=3),rel_emission)
df2 <- rel_emission %>%
mutate(
cs = rev(cumsum(rev(remission))),
pos = remission/2 + lead(cs, 1),
pos = if_else(is.na(pos), remission/2, pos))
ggplot(data=rel_emission, aes(x="", y=remission,fill=cluster)) +
# geom_bar(stat = "identity",width=1) +
geom_col(width = 1)+
coord_polar(theta="y",start = 0 )+
scale_fill_brewer(palette = "Pastel1",direction=-4) +
# geom_text(aes(label = percent(remission)),position = position_stack(vjust = 0.5))+
geom_label_repel(aes(y = pos, label = percent(remission)), data = df2, size=4, show.legend = FALSE, nudge_x = 1) +
# guides(fill = guide_legend(title = "Status"))
theme_void()+
theme(legend.title = element_blank())
# theme(legend.title = element_blank(),
#       legend.box="vertical", legend.margin=margin(),
#         panel.background = element_rect(fill = "white",
#                                 colour = "black",
#                                 size = 0.25),
#         axis.text.x=element_text( hjust=0.5,vjust=0.5),
#         panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
#                                 colour = "grey"), panel.grid.minor=element_blank())+
#   labs(x="",y=" ")+
#   coord_polar("y") +
#   scale_fill_npg()
ggsave("rel_emission_pie.pdf", width=9, height=5.56, units="cm")
power_demand = read_xlsx("power_demand.xlsx")
ggplot(data=power_demand, aes(x=cluster, y=value, fill=type)) +
# scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(position="stack",stat="identity") +
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
# scale_fill_npg()+
# scale_fill_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Pastel1",direction=-4)+
labs(x="",y="Power demand (GWh/yr)")
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
ggsave("power_demand.pdf", width=14,height=5.5,  units="cm")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(cowplot)
library(egg)
library(dplyr)
library(gridExtra)
library(viridis)
library(patchwork)
library(readxl)
library(latex2exp)
library(ggsci)
library(ggrepel)
library(ggpubr)
library(gtable)
library(scales)
energy_load_supply = read_xlsx("energy_load_supply.xlsx")
energy_load_supply = read_xlsx("energy_load_supply.xlsx")
rel_power_demand = read_xlsx("rel_power_demand.xlsx")
power_demand = read_xlsx("power_demand.xlsx")
ggplot(data=power_demand, aes(x=cluster, y=value, fill=type)) +
# scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(position="stack",stat="identity") +
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
# scale_fill_npg()+
# scale_fill_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Pastel1",direction=-4)+
labs(x="",y="Power demand (GWh/yr)")
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
ggsave("power_demand.pdf", width=14,height=5.5,  units="cm")
energy_load_supply = read_xlsx("energy_load_supply.xlsx")
ggplot(data=energy_load_supply, aes(x=period))+
geom_line(data=energy_load_supply, aes(y=power_demand, color="power demand"),size=0.3)+
geom_line(data=energy_load_supply, aes(y=OCGT_power, color="OCGT power"),size=0.3)+
geom_line(data=energy_load_supply, aes(y=ave_power_demand, color="ave power demand"),size=0.3,linetype = "dashed")+
geom_line(data=energy_load_supply, aes(y=ave_OCGT_power, color="ave OCGT power"),size=0.3,linetype = "dashed")+
facet_grid(vars(cluster), vars(slice), scales='free', margins = "am")+
#    facet_wrap(~cluster+slice)+
# # facet_wrap(~cluster, scales="free")+
# expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.position = "bottom",
panel.background = element_rect(
colour = "black",
size = 0.25),
axis.text.x=element_text(angle=90, hjust=0.5,vjust=0.5),
panel.grid.minor = element_blank(),panel.grid.major = element_line(size = 0.25,
colour = "white"))+
labs(x="\n Period (hour)",y="Power (MW)")
ggsave("electricity_load_supply.pdf", width=14, units="cm")
energy_load_supply = read_xlsx("energy_load_supply.xlsx")
ggplot(data=energy_load_supply, aes(x=period))+
geom_line(data=energy_load_supply, aes(y=heat_demand, color="heat demand"),size=0.3)+
geom_line(data=energy_load_supply, aes(y=OCGT_heat, color="OCGT heat"),size=0.3)+
geom_line(data=energy_load_supply, aes(y=ave_heat_demand, color="ave heat demand"),size=0.3,linetype="dashed")+
geom_line(data=energy_load_supply, aes(y=ave_OCGT_heat, color="ave OCGT heat"),size=0.3,linetype="dashed")+
facet_grid(vars(cluster), vars(slice), scales='free', margins = "am")+
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.position = "bottom",
panel.background = element_rect(
colour = "black",
size = 0.25),
axis.text.x=element_text(angle=90, hjust=0.5,vjust=0.5),
panel.grid.minor = element_blank(),panel.grid.major = element_line(size = 0.25,
colour = "white"))+
# scale_color_npg()+
labs(x="\n Period (hour)",y="Heat (MW)")
ggsave("heat_load_supply.pdf", width=14, units="cm")
rel_power_demand = read_xlsx("rel_power_demand.xlsx")
rel_power_demand = read_xlsx("rel_power_demand.xlsx")
ggplot(data=rel_power_demand, aes(x=cluster, y=value, fill=type)) +
scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(stat = "identity", position="dodge") +
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
labs(x="",y="Power demand (%)")
# scale_fill_npg()
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
# scale_fill_brewer(palette = "Dark2")
ggsave("rel_power_demand.pdf", width=14,height=5.5,  units="cm")
power_demand = read_xlsx("power_demand.xlsx")
ggplot(data=power_demand, aes(x=cluster, y=value, fill=type)) +
# scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(position="stack",stat="identity") +
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"))+
# scale_fill_npg()+
# scale_fill_brewer(palette = "Dark2")+
scale_fill_brewer(palette = "Pastel1",direction=-4)+
labs(x="",y="Power demand (GWh/yr)")
#  scale_color_viridis(discrete = TRUE, option = "D")+
# scale_fill_viridis(discrete = TRUE)
ggsave("power_demand.pdf", width=14,height=5.5,  units="cm")
rel_emission = read_xlsx("rel_emission.xlsx")
ggplot(data=rel_emission, aes(x=cluster, y=emission)) +
scale_y_continuous(breaks = round(seq(0, 100, by = 10),1))+
geom_bar(stat = "identity", position="dodge") +
theme(legend.title = element_blank(),
legend.box="vertical", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"), panel.grid.minor=element_blank())+
labs(x=" ",y="Emission (%)")+
scale_fill_npg()
ggsave("rel_emission_bar.pdf", width=8.9, height=5.5, units="cm")
library(ggrepel)
rel_emission = read_xlsx("rel_emission.xlsx")
rel_emission=data.frame(remission=round(rel_emission$emission/100,digits=3),rel_emission)
df2 <- rel_emission %>%
mutate(
cs = rev(cumsum(rev(remission))),
pos = remission/2 + lead(cs, 1),
pos = if_else(is.na(pos), remission/2, pos))
ggplot(data=rel_emission, aes(x="", y=remission,fill=cluster)) +
geom_col(width = 1)+
coord_polar(theta="y",start = 0 )+
scale_fill_brewer(palette = "Pastel1",direction=-4) +
geom_label_repel(aes(y = pos, label = percent(remission)), data = df2, size=4, show.legend = FALSE, nudge_x = 1) +
theme_void()+
theme(legend.title = element_blank())
ggsave("rel_emission_pie.pdf", width=9, height=5.56, units="cm")
rel_emission = read_xlsx("emission.xlsx")
ggplot(data=rel_emission, aes(x=cluster, y=emission)) +
geom_bar(stat = "identity", position="dodge") +
theme(legend.title = element_blank(),
legend.box="vertical", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"), panel.grid.minor=element_blank())+
labs(x=" ",y="Emission (t)")+
scale_fill_npg()
ggsave("emission.pdf", width=8.9, height=5.5, units="cm")
emission = read_xlsx("co2tax_sensitivity_5000.xlsx", sheet="emission")
emission_plot=ggplot(data=emission, aes(x=co2tax))+
geom_line(data=emission, aes(y=emission, color="OEH"),size=0.3)+
geom_line(data=emission, aes(y=emission_nohub, color="Base"),size=0.3)+
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),
legend.position="bottom")+
ylab("Emission (Mt)")+
xlab(TeX("$\n CO_2$ tax (EUR/t)"))
emission = read_xlsx("co2budget_sensitivity_0.xlsx", sheet="emission")
emission_plot=ggplot(data=emission, aes(x=co2budget))+
scale_x_reverse(breaks =round(seq(0, 5.6, by = 1),1))+
geom_line(data=emission, aes(y=emission, color="OEH"),size=0.3)+
geom_line(data=emission, aes(y=emission_nohub, color="Base"),size=0.3)+
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),
legend.position="bottom")+
ylab("Emission (Mt)")+
xlab(TeX("$\n CO_2$ budget (Mt/yr)"))
tech2 = read_xlsx("abatement_cost(krt_0.5E_550tax)_sensitivity_8000.xlsx", sheet="tech")
ggplot(data=tech2, aes(x=abatementcost))+
scale_x_reverse(breaks =round(seq(0, 120, by = 40),1))+
geom_line(data=tech2, aes(y=electrolyser, color="electrolyser"),size=0.3)+
geom_line(data=tech2, aes(y=fuel_cell, color="fuel cell"),size=0.3)+
geom_line(data=tech2, aes(y=battery, color="battery"),size=0.3)+
geom_line(data=tech2, aes(y=E_boiler, color="electric boiler"),size=0.3)+
geom_line(data=tech2, aes(y=onshore_capacity, color="onshore capacity"),size=0.3)+
geom_line(data=tech2, aes(y=solar, color="solar"),size=0.3)+
geom_line(data=tech2, aes(y=wind, color="wind"),size=0.3)+
geom_line(data=tech2, aes(y=hydrogen, color= "hydrogen storage"),size=0.3)+
facet_wrap(~location)+
theme(legend.title = element_blank(),
legend.position = "bottom",
panel.background = element_rect(
colour = "black",
size = 0.25),
axis.text.x=element_text(angle=0, hjust=0.5,vjust=0.5),
panel.grid.minor = element_blank(),panel.grid.major = element_line(size = 0.25,
colour = "white"))+
ylab("Capacity (MW)")+
xlab(TeX("AAC (EUR/t)"))
ggsave("aac_tech_cap_s1.pdf", width=14, height=8.65, units="cm")
el = read_xlsx("abatement_cost(krt_0E_2000tax)_sensitivity_8000.xlsx", sheet="energy_loss")
loss=c(el$el_OCGT, el$el_l, el$el_production, el$el_energyhub, el$el_eshed, el$el_hshed)
type = c(rep("OCGT",length(el $el_l)),rep("transmission",length(el $el_l)), rep("production",length(el $el_l)),rep("energy hub",length(el $el_l)),rep("electricity generation shed",length(el $el_l)),rep("heat generation shed",length(el $el_l)))
abatementcost=c(rep(el$abatementcost,6))
data=data.frame(loss,type,abatementcost)
ggplot(data=data, aes(x=abatementcost, y=loss, fill=type), size=1)+
geom_area()+
scale_x_reverse(breaks =round(seq(0,800, by = 100),1))+
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),
legend.position="bottom")+
scale_fill_brewer(palette = "Dark2")+
ylab("Energy loss (GWh)")+
xlab("AAC (EUR/t)")
ggsave("abatement_krt_energy_loss_s2.pdf", width=14,height=8.6, units="cm")
tech2 = read_xlsx("abatement_cost(krt_0E_2000tax)_sensitivity_8000.xlsx", sheet="tech")
ggplot(data=tech2, aes(x=abatementcost))+
scale_x_reverse(breaks =round(seq(0, 800, by = 200),1))+
geom_line(data=tech2, aes(y=electrolyser, color="electrolyser"),size=0.3)+
geom_line(data=tech2, aes(y=fuel_cell, color="fuel cell"),size=0.3)+
geom_line(data=tech2, aes(y=battery, color="battery"),size=0.3)+
geom_line(data=tech2, aes(y=E_boiler, color="electric boiler"),size=0.3)+
geom_line(data=tech2, aes(y=onshore_capacity, color="onshore capacity"),size=0.3)+
geom_line(data=tech2, aes(y=solar, color="solar"),size=0.3)+
geom_line(data=tech2, aes(y=wind, color="wind"),size=0.3)+
geom_line(data=tech2, aes(y=hydrogen, color= "hydrogen storage"),size=0.3)+
facet_wrap(~location)+
theme(legend.title = element_blank(),
legend.position = "bottom",
panel.background = element_rect(
colour = "black",
size = 0.25),
axis.text.x=element_text(angle=0, hjust=0.5,vjust=0.5),
panel.grid.minor = element_blank(),panel.grid.major = element_line(size = 0.25,
colour = "white"))+
ylab("Capacity (MW)")+
xlab(TeX("AAC (EUR/t)"))
ggsave("aac_tech_cap_s2.pdf", width=14, height=8.65, units="cm")
emission = read_xlsx("co2budget_sensitivity_0.xlsx", sheet="emission")
p1 <- ggplot(data=emission, aes(x=co2budget))+
# scale_x_continuous(breaks =round(seq(0, 5000, by = 500),1))+
scale_x_reverse(breaks =round(seq(0, 5.6, by = 1),1))+
geom_line(data=emission, aes(y=emission, color="emission"),size=0.3)+
geom_line(data=emission, aes(y=energy_loss/4000, color="energy loss"),size=0.3)+
geom_line(data=emission, aes(y=emission_nohub, color="emission (no energy hub)"),size=0.3)+
geom_line(data=emission, aes(y=energy_loss_nohub/4000, color="energy loss (no energy hub)"),size=0.3)+
# scale_y_continuous(sec.axis = sec_axis(~.*4000,name="\n Energy loss (GWh)"), breaks =round(seq(0, 5, by = 1),1))+
scale_y_continuous(sec.axis = sec_axis(~.*4000,name="\n Energy loss (GWh)"))+
# facet_grid(~slice, scales ="free")+
expand_limits(y=0)+
theme(legend.title = element_blank(),
legend.box="horizontal", legend.margin=margin(),
panel.background = element_rect(fill = "white",
colour = "black",
size = 0.25),
axis.text.x=element_text( hjust=0.5,vjust=0.5),
panel.grid.minor = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),panel.grid.major = element_line(size = 0.25, linetype = 'dashed',
colour = "grey"),
legend.position="bottom"
# ,legend.key = element_rect(fill = "transparent", colour = "transparent")
)+
ylab("Emission (Mt)")+
xlab(TeX("$CO_2$ budget (Mt/yr)"))
ggsave("co2budget_emission_energyloss.pdf",plot=p1,width=15, height=9.2, units="cm")
